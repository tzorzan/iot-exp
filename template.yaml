Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  DeviceID:
    Description: ID of the device
    Type: String
    AllowedPattern: "[a-zA-Z0-9_/#+]*"
    MinLength: '1'
    MaxLength: '2048'
    ConstraintDescription: Must contain only alphanumberic characters and underscores
Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: deviceid
        AttributeType: S
      KeySchema:
      - AttributeName: deviceid
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  ShadowUpdateTopicRule:
    Type: "AWS::IoT::TopicRule"
    Properties:
      TopicRulePayload:
        AwsIotSqlVersion: "2016-03-23"
        Description: "Save the thing shadow update."
        RuleDisabled: "false"
        Sql:
          Fn::Join: [ "", ["SELECT state.reported.* FROM '$aws/things/", { "Ref": "DeviceID" }, "/shadow/update/accepted'"] ]
        Actions:
          - DynamoDB:
              TableName:
                Ref: DynamoDBTable
              HashKeyField: deviceid
              HashKeyValue: "${topic(3)}"
              RangeKeyField: deviceid
              RangeKeyValue: "${topic(3)}"
              PayloadField: "state"
              RoleArn:
                Fn::GetAtt:
                - DynamoDBTableRolePutItem
                - Arn
  DynamoDBTableRolePutItem:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - iot.amazonaws.com
            Action:
            - sts:AssumeRole
        Path: "/"
        Policies:
        - PolicyName: allow-put-item
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: dynamodb:PutItem
              Resource:
                Fn::Join:
                - ''
                - - 'arn:aws:dynamodb:'
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":table/"
                  - Ref: DynamoDBTable
            - Effect: Allow
              Action: "iot:*"
              Resource: "*"
  StatusUpdateTopicRule:
    Type: "AWS::IoT::TopicRule"
    Properties:
      TopicRulePayload:
        AwsIotSqlVersion: "2016-03-23"
        Description: "Save the thing shadow update."
        RuleDisabled: "false"
        Sql:
          Fn::Join: [ "", ["SELECT topic(3) AS thing, state.reported.* AS state FROM '$aws/things/", { "Ref": "DeviceID" }, "/shadow/update/accepted'", " WHERE NOT isUndefined(state.reported.sensor)"] ]
        Actions:
          - Lambda:
              FunctionArn: !GetAtt MyFunction.Arn
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
        Handler: index.handler
        Runtime: nodejs6.10
        CodeUri: lambda/
        Policies:
          - AWSIoTConfigAccess
  LambdaInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      SourceArn: !Join [ "", [ "arn:aws:iot:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":rule/", !Ref "StatusUpdateTopicRule" ] ]
      Action: lambda:InvokeFunction
      Principal: iot.amazonaws.com
      FunctionName: !GetAtt MyFunction.Arn
      SourceAccount: !Ref AWS::AccountId
